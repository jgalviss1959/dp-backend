# Nombre del servicio en Eureka
spring.application.name=api-gateway

# Puerto donde corre el Gateway
server.port=8080

# Configuraci\u00F3n de Eureka
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka/

user-service.url=http://user-service

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# Evita problemas de cache en el registro
eureka.instance.hostname=localhost
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10

# Habilitar descubrimiento autom\u00E1tico de rutas
spring.cloud.gateway.discovery.locator.enabled=false
spring.cloud.gateway.discovery.locator.lower-case-service-id=true


# Configuracion de rutas del API Gateway
# Ruta para endpoints de autenticaci\u00F3n
spring.cloud.gateway.routes[0].id=user-service-auth
spring.cloud.gateway.routes[0].order=0
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

# Ruta para endpoints de usuarios
spring.cloud.gateway.routes[5].id=user-service-users
spring.cloud.gateway.routes[5].order=0
spring.cloud.gateway.routes[5].uri=lb://user-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/users/**


spring.cloud.gateway.routes[1].id=payment-service
spring.cloud.gateway.routes[1].uri=lb://payment-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/payments/**

spring.cloud.gateway.routes[2].id=transaction-service
spring.cloud.gateway.routes[2].uri=lb://transaction-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/transactions/**

spring.cloud.gateway.routes[3].id=wallet-service
spring.cloud.gateway.routes[3].uri=lb://wallet-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/accounts/**

spring.cloud.gateway.routes[4].id=report-service
spring.cloud.gateway.routes[4].uri=lb://report-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/reports/**

# Configuracion de seguridad (Deshabilitar CORS en desarrollo)
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true


# Configuracion de logging y monitoreo
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

logging.level.org.springframework.cloud=DEBUG
logging.level.com.netflix.eureka=DEBUG
logging.level.org.springframework.web=DEBUG

# Configuracion de tiempo de espera (Timeouts)
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=10s

# Habilitar reintentos en caso de fallos en los microservicios
#spring.cloud.gateway.retry.routes[0].id=user-service
#spring.cloud.gateway.retry.routes[0].retries=3
#spring.cloud.gateway.retry.routes[0].statuses=500,502,503,504
#spring.cloud.gateway.retry.routes[0].methods=GET,POST

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#spring.security.user.name=admin
#spring.security.user.password=admin

jwt.secret=superclaveultrasecretaquesedebealmacenarenenv
jwt.expiration=3600000